;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;#include <i2c.h>
;#include <io.h>
;#include "initial_system.h"
;#include "uart.h"
;#include "debug.h"
;#include "xbee.h"
;#include "xbeehandler.h"
;#include "timer.h"
;#include "int_protocol.h"
;#include "int_handler.h"
;#include "adc.h"
;
;/* ================================================================================= */
;int initial_system(void) {
; 0006 0012 int initial_system(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0006 0013 
; 0006 0014     init_IO();
;PCODE: $0000000F VOL: 0
; 0006 0015 
; 0006 0016     //============ Uart Initial ============//
; 0006 0017     init_uart(0, 38400);     // uart0 for printDebug
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0006 0018     init_uart(1, 38400);    // uart1 for xbee
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0006 0019 
; 0006 001A     //============ Timer Initial ============//
; 0006 001B     init_timer();
;PCODE: $00000018 VOL: 0
; 0006 001C     enable_timerOverflow(0);      // interrupt every 0.021 sec.
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0006 001D     enable_timerOverflow(1);      // interrupt every 1 sec.
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0006 001E     enable_timerOverflow(3);      // interrupt every 0.5 sec.
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0006 001F 
; 0006 0020     //============ Peripheral Initial ============//
; 0006 0021     i2c_init();
;PCODE: $00000022 VOL: 0
; 0006 0022 
; 0006 0023     //============ Module Initial ============//
; 0006 0024     //init_RTC();         delay_ms(100);
; 0006 0025     init_adc(VREF_AVCC);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0006 0026 
; 0006 0027     //============ Xbee Handler ============//
; 0006 0028     funcProcessZTS = &xbee_processZTS;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0006 0029     funcProcessMDS = &xbee_processMDS;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0006 002A     funcProcessATCMR = &xbee_processATCMR;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0006 002B     funcProcessZRPKT = &INT_processPacket;            // INT_COMM_PROTOCOL
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0006 002C 
; 0006 002D     //============ INT Handler ============//
; 0006 002E     funcSendPACKET = &INT_sendPacket;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0006 002F     funcProcessRMDCTRLC = &INT_processRMDCTRLC;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0006 0030     funcProcessNETMAINA = &INT_processNETMAINA;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0006 0031 
; 0006 0032     return 0;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0006 0033 
; 0006 0034 }
;PCODE: $00000035 VOL: 0
;/* ================================================================================= */
;void init_IO(void) {
; 0006 0036 void init_IO(void) {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0006 0037 
; 0006 0038     /*----- Digital Input -----*/
; 0006 0039     // Initial Direction
; 0006 003A     SW_BUTTON_DDR;           // Switch Button, Join Button
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0006 003B     // pull up
; 0006 003C     SW_BUTTON_PORT = 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0006 003D 
; 0006 003E     D_SW1_DDR;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0006 003F     D_SW2_DDR;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0006 0040     D_SW3_DDR;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0006 0041     D_SW4_DDR;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0006 0042 
; 0006 0043     /*----- Digital Output -----*/
; 0006 0044     // Initial Direction
; 0006 0045     LED_STAT_DDR;                   // LED Status
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0006 0046     POWER_RELAY_DDR;                // Drive relay
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0006 0047     XBEE_RESET_DDR;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0006 0048     XBEE_SLEEP_DDR;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0006 0049 
; 0006 004A     LED_STAT_OFF;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0006 004B     POWER_RELAY_OFF;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0006 004C     XBEE_RESET_HIGH;      // XBee Reset active low
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0006 004D     XBEE_SLEEP_LOW;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0006 004E 
; 0006 004F }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;/* ================================================================================= */
;
;
